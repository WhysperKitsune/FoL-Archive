<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Weaker is Better</title>
    <link>https://fol-archive.netlify.app/t/weaker-is-better/71148</link>
    <description>...when balencing classes

This is because any given ability is not always going to be in play and even if it is it might not always be for the same side.

Thus the stronger any given class or ability is then the greater the difference between having it in play and not having it in play.

So when you design a class or ability you need to figure out what it is trying to do and make sure it can&#39;t go beyond that by too much. Emergent properties are fine, just make sure that nothing can do everything.

This also has a bonus effect of making the end result more interactive. If you can do everything then you will. However the best classes leave you with a dilemma to solve. Take Noble for example:

&quot;I can use maid spy to get logs and use gossip to verify and cross reference them. However since I can&#39;t do both at once I won&#39;t be getting up to date logs if I Gossip and I can&#39;t verify the claims if I spy.&quot;

This problem has simple solutions of course. The point is that it isn&#39;t handed to you. This makes the class more fun and interactive.</description>
    
    <lastBuildDate>Wed, 25 Jul 2018 21:44:38 +0000</lastBuildDate>
    <category>General</category>
    <atom:link href="https://fol-archive.netlify.app/t/weaker-is-better/71148.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Weaker is Better</title>
        <dc:creator><![CDATA[NuclearBurrito]]></dc:creator>
        <description><![CDATA[
            <p>…when balencing classes</p>
<p>This is because any given ability is not always going to be in play and even if it is it might not always be for the same side.</p>
<p>Thus the stronger any given class or ability is then the greater the difference between having it in play and not having it in play.</p>
<p>So when you design a class or ability you need to figure out what it is trying to do and make sure it can’t go beyond that by too much. Emergent properties are fine, just make sure that nothing can do everything.</p>
<p>This also has a bonus effect of making the end result more interactive. If you can do everything then you will. However the best classes leave you with a dilemma to solve. Take Noble for example:</p>
<p>“I can use maid spy to get logs and use gossip to verify and cross reference them. However since I can’t do both at once I won’t be getting up to date logs if I Gossip and I can’t verify the claims if I spy.”</p>
<p>This problem has simple solutions of course. The point is that it isn’t handed to you. This makes the class more fun and interactive.</p>
          <p><a href="https://fol-archive.netlify.app/t/weaker-is-better/71148/1">Read full topic</a></p>
        ]]></description>
        <link>https://fol-archive.netlify.app/t/weaker-is-better/71148/1</link>
        <pubDate>Wed, 25 Jul 2018 21:44:38 +0000</pubDate>
        <guid isPermaLink="false">forum.throneoflies.com-post-71148-1</guid>
        <source url="https://fol-archive.netlify.app/t/weaker-is-better/71148.rss">Weaker is Better</source>
      </item>
  </channel>
</rss>
